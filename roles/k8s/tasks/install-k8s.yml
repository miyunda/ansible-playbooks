---
- name: Prepare to introduce k8s repo
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
      - gpg
    state: latest
  changed_when: false

- name: Introduce k8s' offical apt-key and repo for Debian family
  block:
    # Optional, releases older than Debian 12/Ubuntu 22.04 don't have this folder
    - name: Prepare the key folder
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root
      changed_when: false

    - name: Download and dearmor apt key
      ansible.builtin.get_url:
        url: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key"
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        force: true

    - name: Introduceapt repo
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/ /"
        state: present
        update_cache: yes
        filename: /etc/apt/sources.list.d/kubernetes
  when: ansible_facts['os_family'] == "Debian"

- name: Introduce k8s' offical repo for RedHat family
  block:
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: Add k8s' repository
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: Kubernetes Repo, added by Ansible
        gpgcheck: true
        gpgkey: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/rpm/repodata/repomd.xml.key"
        baseurl: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/rpm/"
        # exclude:
        #  - kube*
        #  - cri-tools
  when: ansible_facts['os_family'] == "RedHat"

- name: Install kubeadm, kubelet and kubectl
  ansible.builtin.package:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present

- name: Install socat
  ansible.builtin.package:
    name: socat
    state: present
    update_cache: true

- name: Install tc for Debian
  ansible.builtin.package:
    name: iproute2
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Install tc for RedHat
  ansible.builtin.package:
    name: iproute-tc
    state: present
  when: ansible_facts['os_family'] == "RedHat"
